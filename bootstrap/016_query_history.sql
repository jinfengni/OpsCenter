
-- This view is a union of the complete and daily gridded queries.
-- This includes daily gridded execution for queries still running but doesn't include complete queries for those queries still running.
-- This data is intended to be serialized daily.
CREATE OR REPLACE VIEW INTERNAL_REPORTING.QUERY_HISTORY_COMPLETE_AND_DAILY AS
SELECT
    current_timestamp() as run_id,
    tools.qtag(query_text, true, true) as qtag,
    DATEDIFF('day', START_TIME, END_TIME) + 1 AS PERIOD_PLUS,
    IFF(index = PERIOD_PLUS, 'DAILY', 'COMPLETE') AS RECORD_TYPE,
    IFF(index in (0, PERIOD_PLUS), start_time, dateadd('day', index, date_trunc('day', start_time))) as ST,
    IFF(index in (PERIOD_PLUS - 1, PERIOD_PLUS), end_time, least(CURRENT_TIMESTAMP(), dateadd('day', index + 1, date_trunc('day', start_time)))) as ET,
    date_trunc('day', ST) AS ST_PERIOD,
    -- note that this formula can overcount compute consumption in the cases where snowflake reports
    -- peak load as opposed to average load. Ideally load percent would be area under the curve.
    DATEDIFF('milliseconds', ST, ET) * (0.01 * query_load_percent)* COALESCE(size.credits_per_milli, 0) AS unloaded_direct_compute_credits,
    DATEDIFF('milliseconds', ST, ET) AS DURATION,
    IFF(start_time > end_time, true, false) AS INCOMPLETE,
    START_TIME AS filterts,
    qh.QUERY_ID,
    qh.QUERY_TEXT,
    qh.DATABASE_ID,
    qh.DATABASE_NAME,
    qh.SCHEMA_ID,
    qh.SCHEMA_NAME,
    qh.QUERY_TYPE,
    qh.SESSION_ID,
    qh.USER_NAME,
    qh.ROLE_NAME,
    qh.WAREHOUSE_ID,
    qh.WAREHOUSE_NAME,
    qh.WAREHOUSE_SIZE,
    qh.WAREHOUSE_TYPE,
    qh.CLUSTER_NUMBER,
    qh.QUERY_TAG,
    qh.EXECUTION_STATUS,
    qh.ERROR_CODE,
    qh.ERROR_MESSAGE,
    qh.START_TIME,
    qh.END_TIME,
    qh.TOTAL_ELAPSED_TIME,
    qh.BYTES_SCANNED,
    qh.PERCENTAGE_SCANNED_FROM_CACHE,
    qh.BYTES_WRITTEN,
    qh.BYTES_WRITTEN_TO_RESULT,
    qh.BYTES_READ_FROM_RESULT,
    qh.ROWS_PRODUCED,
    qh.ROWS_INSERTED,
    qh.ROWS_UPDATED,
    qh.ROWS_DELETED,
    qh.ROWS_UNLOADED,
    qh.BYTES_DELETED,
    qh.PARTITIONS_SCANNED,
    qh.PARTITIONS_TOTAL,
    qh.BYTES_SPILLED_TO_LOCAL_STORAGE,
    qh.BYTES_SPILLED_TO_REMOTE_STORAGE,
    qh.BYTES_SENT_OVER_THE_NETWORK,
    qh.COMPILATION_TIME,
    qh.EXECUTION_TIME,
    qh.QUEUED_PROVISIONING_TIME,
    qh.QUEUED_REPAIR_TIME,
    qh.QUEUED_OVERLOAD_TIME,
    qh.TRANSACTION_BLOCKED_TIME,
    qh.OUTBOUND_DATA_TRANSFER_CLOUD,
    qh.OUTBOUND_DATA_TRANSFER_REGION,
    qh.OUTBOUND_DATA_TRANSFER_BYTES,
    qh.INBOUND_DATA_TRANSFER_CLOUD,
    qh.INBOUND_DATA_TRANSFER_REGION,
    qh.INBOUND_DATA_TRANSFER_BYTES,
    qh.LIST_EXTERNAL_FILES_TIME,
    qh.CREDITS_USED_CLOUD_SERVICES,
    qh.RELEASE_VERSION,
    qh.EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
    qh.EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
    qh.EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
    qh.EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
    qh.EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
    qh.QUERY_LOAD_PERCENT,
    qh.IS_CLIENT_GENERATED_STATEMENT,
    qh.QUERY_ACCELERATION_BYTES_SCANNED,
    qh.QUERY_ACCELERATION_PARTITIONS_SCANNED,
    qh.QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
    qh.TRANSACTION_ID,
    qh.CHILD_QUERIES_WAIT_TIME,
    qh.ROLE_TYPE
FROM ACCOUNT_USAGE.QUERY_HISTORY AS qh
    LEFT OUTER JOIN INTERNAL_REPORTING.WAREHOUSE_CREDITS_PER_SIZE size ON qh.warehouse_size = size.warehouse_size,
    LATERAL FLATTEN(internal.period_range_plus('day', qh.start_time, qh.end_time)) emt(index)
;
create table internal_reporting_mv.query_history_complete_and_daily_incomplete if not exists
as select
        RUN_ID,
        QTAG,
        PERIOD_PLUS,
        RECORD_TYPE,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
from internal_reporting.query_history_complete_and_daily limit 0;

create table internal_reporting_mv.query_history_complete_and_daily if not exists as
select
        RUN_ID,
        QTAG,
        PERIOD_PLUS,
        RECORD_TYPE,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
from internal_reporting.query_history_complete_and_daily limit 0;

create or replace view reporting.enriched_query_history as
    select
        unloaded_direct_compute_credits * INTERNAL.GET_CREDIT_COST(warehouse_id) as COST,
        RUN_ID,
        QTAG,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
    from internal_reporting_mv.query_history_complete_and_daily where RECORD_TYPE = 'COMPLETE'
    union all
    select
        unloaded_direct_compute_credits * INTERNAL.GET_CREDIT_COST(warehouse_id) as COST,
        RUN_ID,
        QTAG,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
    from internal_reporting_mv.query_history_complete_and_daily_incomplete where RECORD_TYPE = 'COMPLETE'
    ;

create or replace view reporting.enriched_query_history_daily as
    select
        unloaded_direct_compute_credits * INTERNAL.GET_CREDIT_COST(warehouse_id) as COST,
        RUN_ID,
        QTAG,
        PERIOD_PLUS,
        RECORD_TYPE,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
        from internal_reporting_mv.query_history_complete_and_daily where RECORD_TYPE = 'DAILY'
    union all
    select
        unloaded_direct_compute_credits * INTERNAL.GET_CREDIT_COST(warehouse_id) as COST,
        RUN_ID,
        QTAG,
        PERIOD_PLUS,
        RECORD_TYPE,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
        from internal_reporting_mv.query_history_complete_and_daily_incomplete where RECORD_TYPE = 'DAILY';

-- Similar to above but subdivides queries by hour instead of day.
-- It might be more efficient to expand from days to hours as opposed to here where we expand from complete to hours. We chose not
-- to do this thinking this would be more efficient given less data read off disk (and the expansion typically collapses
-- immediately with an aggregate).
-- This view is not intended to be serialized.
CREATE OR REPLACE VIEW reporting.enriched_query_history_hourly AS
WITH QH AS (
    SELECT
        RUN_ID,
        QTAG,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
    FROM reporting.enriched_query_history
),
EXTRAS AS (
SELECT
    DATEDIFF('hour', START_TIME, END_TIME) AS PERIOD_PLUS,
    IFF(index in (0, PERIOD_PLUS), start_time, dateadd('hour', index, date_trunc('hour', start_time))) as ST,
    IFF(index in (PERIOD_PLUS), end_time, least(CURRENT_TIMESTAMP(), dateadd('hour', index + 1, date_trunc('hour', start_time)))) as ET,
    date_trunc('hour', ST) AS ST_PERIOD,
    -- note that this formula can overcount compute consumption in the cases where snowflake reports
    -- peak load as opposed to average load. Ideally load percent would be area under the curve.
    DATEDIFF('milliseconds', ST, ET) * (0.01 * query_load_percent)* COALESCE(size.credits_per_milli, 0) AS unloaded_direct_compute_credits,
    DATEDIFF('milliseconds', ST, ET) AS DURATION,
    unloaded_direct_compute_credits * INTERNAL.GET_CREDIT_COST(warehouse_id) as COST,
    qh.QUERY_ID,
    qh.QUERY_TEXT,
    qh.DATABASE_ID,
    qh.DATABASE_NAME,
    qh.SCHEMA_ID,
    qh.SCHEMA_NAME,
    qh.QUERY_TYPE,
    qh.SESSION_ID,
    qh.USER_NAME,
    qh.ROLE_NAME,
    qh.WAREHOUSE_ID,
    qh.WAREHOUSE_NAME,
    qh.WAREHOUSE_SIZE,
    qh.WAREHOUSE_TYPE,
    qh.CLUSTER_NUMBER,
    qh.QUERY_TAG,
    qh.EXECUTION_STATUS,
    qh.ERROR_CODE,
    qh.ERROR_MESSAGE,
    qh.START_TIME,
    qh.END_TIME,
    qh.TOTAL_ELAPSED_TIME,
    qh.BYTES_SCANNED,
    qh.PERCENTAGE_SCANNED_FROM_CACHE,
    qh.BYTES_WRITTEN,
    qh.BYTES_WRITTEN_TO_RESULT,
    qh.BYTES_READ_FROM_RESULT,
    qh.ROWS_PRODUCED,
    qh.ROWS_INSERTED,
    qh.ROWS_UPDATED,
    qh.ROWS_DELETED,
    qh.ROWS_UNLOADED,
    qh.BYTES_DELETED,
    qh.PARTITIONS_SCANNED,
    qh.PARTITIONS_TOTAL,
    qh.BYTES_SPILLED_TO_LOCAL_STORAGE,
    qh.BYTES_SPILLED_TO_REMOTE_STORAGE,
    qh.BYTES_SENT_OVER_THE_NETWORK,
    qh.COMPILATION_TIME,
    qh.EXECUTION_TIME,
    qh.QUEUED_PROVISIONING_TIME,
    qh.QUEUED_REPAIR_TIME,
    qh.QUEUED_OVERLOAD_TIME,
    qh.TRANSACTION_BLOCKED_TIME,
    qh.OUTBOUND_DATA_TRANSFER_CLOUD,
    qh.OUTBOUND_DATA_TRANSFER_REGION,
    qh.OUTBOUND_DATA_TRANSFER_BYTES,
    qh.INBOUND_DATA_TRANSFER_CLOUD,
    qh.INBOUND_DATA_TRANSFER_REGION,
    qh.INBOUND_DATA_TRANSFER_BYTES,
    qh.LIST_EXTERNAL_FILES_TIME,
    qh.CREDITS_USED_CLOUD_SERVICES,
    qh.RELEASE_VERSION,
    qh.EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
    qh.EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
    qh.EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
    qh.EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
    qh.EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
    qh.QUERY_LOAD_PERCENT,
    qh.IS_CLIENT_GENERATED_STATEMENT,
    qh.QUERY_ACCELERATION_BYTES_SCANNED,
    qh.QUERY_ACCELERATION_PARTITIONS_SCANNED,
    qh.QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
    qh.TRANSACTION_ID,
    qh.CHILD_QUERIES_WAIT_TIME,
    qh.ROLE_TYPE
FROM QH
LEFT OUTER JOIN INTERNAL_REPORTING.WAREHOUSE_CREDITS_PER_SIZE size ON qh.warehouse_size = size.warehouse_size,
LATERAL FLATTEN(internal.period_range('hour', qh.start_time, qh.end_time)) emt(index)
)
SELECT * EXCLUDE  (PERIOD_PLUS) FROM EXTRAS;
;

CREATE OR REPLACE VIEW REPORTING.LABELED_QUERY_HISTORY AS
SELECT
        COST,
        RUN_ID,
        QTAG,
        ST,
        ET,
        ST_PERIOD,
        UNLOADED_DIRECT_COMPUTE_CREDITS,
        DURATION,
        INCOMPLETE,
        FILTERTS,
        QUERY_ID,
        QUERY_TEXT,
        DATABASE_ID,
        DATABASE_NAME,
        SCHEMA_ID,
        SCHEMA_NAME,
        QUERY_TYPE,
        SESSION_ID,
        USER_NAME,
        ROLE_NAME,
        WAREHOUSE_ID,
        WAREHOUSE_NAME,
        WAREHOUSE_SIZE,
        WAREHOUSE_TYPE,
        CLUSTER_NUMBER,
        QUERY_TAG,
        EXECUTION_STATUS,
        ERROR_CODE,
        ERROR_MESSAGE,
        START_TIME,
        END_TIME,
        TOTAL_ELAPSED_TIME,
        BYTES_SCANNED,
        PERCENTAGE_SCANNED_FROM_CACHE,
        BYTES_WRITTEN,
        BYTES_WRITTEN_TO_RESULT,
        BYTES_READ_FROM_RESULT,
        ROWS_PRODUCED,
        ROWS_INSERTED,
        ROWS_UPDATED,
        ROWS_DELETED,
        ROWS_UNLOADED,
        BYTES_DELETED,
        PARTITIONS_SCANNED,
        PARTITIONS_TOTAL,
        BYTES_SPILLED_TO_LOCAL_STORAGE,
        BYTES_SPILLED_TO_REMOTE_STORAGE,
        BYTES_SENT_OVER_THE_NETWORK,
        COMPILATION_TIME,
        EXECUTION_TIME,
        QUEUED_PROVISIONING_TIME,
        QUEUED_REPAIR_TIME,
        QUEUED_OVERLOAD_TIME,
        TRANSACTION_BLOCKED_TIME,
        OUTBOUND_DATA_TRANSFER_CLOUD,
        OUTBOUND_DATA_TRANSFER_REGION,
        OUTBOUND_DATA_TRANSFER_BYTES,
        INBOUND_DATA_TRANSFER_CLOUD,
        INBOUND_DATA_TRANSFER_REGION,
        INBOUND_DATA_TRANSFER_BYTES,
        LIST_EXTERNAL_FILES_TIME,
        CREDITS_USED_CLOUD_SERVICES,
        RELEASE_VERSION,
        EXTERNAL_FUNCTION_TOTAL_INVOCATIONS,
        EXTERNAL_FUNCTION_TOTAL_SENT_ROWS,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS,
        EXTERNAL_FUNCTION_TOTAL_SENT_BYTES,
        EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES,
        QUERY_LOAD_PERCENT,
        IS_CLIENT_GENERATED_STATEMENT,
        QUERY_ACCELERATION_BYTES_SCANNED,
        QUERY_ACCELERATION_PARTITIONS_SCANNED,
        QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR,
        TRANSACTION_ID,
        CHILD_QUERIES_WAIT_TIME,
        ROLE_TYPE
FROM REPORTING.enriched_query_history;
